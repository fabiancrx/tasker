# Tested workflow that creates .apk on every commit
name: flutter App Release

on:
  push:
    branches: [master,release]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.5.0'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: |
          echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.22.1"
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - run: flutter pub get
      # - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build apk --release --target-platform android-arm  
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}

# Newer workflow to test

#name: Flutter CI
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'beta'
#
#      - name: Cache Gradle modules
#        uses: actions/cache@v2
#        env:
#          cache-number: ${{ secrets.CACHE_NUMBER }}
#        with:
#          path: |
#            ~/android/.gradle
#            ~/.gradle/cache
#            # ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ env.cache-number }}-${{ hashFiles('android/build.gradle') }}-${{ hashFiles('android/app/build.gradle') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-${{ env.cache-name }}-${{ hashFiles('android/build.gradle') }}
#            ${{ runner.os }}-gradle-${{ env.cache-name }}-
#            ${{ runner.os }}-gradle-
#            ${{ runner.os }}-
#
#      - name: Cache CocoaPods modules
#        uses: actions/cache@v2
#        env:
#          cache-number: ${{ secrets.CACHE_NUMBER }}
#        with:
#          path: Pods
#          key: ${{ runner.os }}-pods-${{ env.cache-number }}-${{ hashFiles('ios/Podfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-pods-${{ env.cache-name }}-
#            ${{ runner.os }}-pods-
#            ${{ runner.os }}-
#
#      - name: Cache Flutter modules
#        uses: actions/cache@v2
#        env:
#          cache-number: ${{ secrets.CACHE_NUMBER }}
#        with:
#          path: |
#            /Users/runner/hostedtoolcache/flutter
#            # ~/.pub-cache
#          key: ${{ runner.os }}-pub-${{ env.cache-number }}-${{ env.flutter_version }}-${{ hashFiles('pubspec.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-pub-${{ env.flutter_version }}-
#            ${{ runner.os }}-pub-
#            ${{ runner.os }}-
#
#      - name: Get flutter dependencies.
#        run: make dependencies
#
#      - name: Check for any formatting and statically analyze the code.
#        run: make format-analyze
#
#      - name: Run widget tests for our flutter project.
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#        run: |
#          make unit-test
#          make codecov
#
#      - name: Build ipa and apk
#        run: |
#          make build-android-prd
#          make build-ios-prd
#
#      - name: Slack Notification
#        uses: homoluctus/slatify@master
#        if: always()
#        with:
#          type: ${{ job.status }}
#          job_name: '*Flutter Build*'
#          mention: 'here'
#          mention_if: 'failure'
#          channel: '#develop'
#          username: 'Github Actions'
#          icon_emoji: ':octocat:'
#          url: ${{ secrets.SLACK_WEBHOOK_URL }}
#          commit: true
#          token: ${{ secrets.GITHUB_TOKEN }}
#
